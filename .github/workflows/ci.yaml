name: ci

on:
  pull_request:

env:
  helm-version: "v3.12.2"
  kubeval-version: "v0.16.1"

jobs:
  kubeval-chart:
    name: Evaluate chart on ${{ matrix.k8s }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        k8s:
          - v1.21.14
          - v1.22.17
          - v1.23.17
          - v1.24.17
          - v1.25.16
          - v1.26.14
          - v1.27.11
          - v1.28.7
          - v1.29.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
  
      - name: Run kubeval
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
        run: .github/kubeval.sh

  test-chart:
    name: Test Helm Chart ${{ matrix.k8s}}
    runs-on: ubuntu-latest
    needs:
      - kubeval-chart
    strategy:
      matrix:
        k8s:
          - v1.21.14
          - v1.22.17
          - v1.23.17
          - v1.24.17
          - v1.25.16
          - v1.26.14
          - v1.27.11
          - v1.28.7
          - v1.29.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create kind ${{ matrix.k8s }} cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1
        with:
          node_image: kindest/node:${{ matrix.k8s }}
          kubectl_version: ${{ matrix.k8s }}

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}